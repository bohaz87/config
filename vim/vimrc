" ============================================
" basic & view
" ============================================
colors default
set langmenu=en_US.UTF-8
language messages en_US.UTF-8

if has("nvim")
  set signcolumn=yes:1
else
  set signcolumn=number
endif

set nocompatible
set nu
set rnu
set showcmd
set nowrap
set hlsearch
set ignorecase
set smartcase
set wildmenu
set wildoptions=pum
set scrolloff=5
syntax on
filetype plugin indent on
"set foldmethod=indent
"set foldlevel=1
"set timeoutlen=0

" ============================================
" editing
" ============================================
set mouse=a
set encoding=utf-8
set fileencoding=utf-8
set fileencodings=utf-8
set backspace=2
set tabstop=2
set softtabstop=2
set shiftwidth=2
set expandtab
set nojoinspaces
set eol
nmap 0 ^

" ============================================
" backup
" ============================================
set nobackup
set nowritebackup
set noswapfile

" ============================================
" Plugin
" ============================================
" Automatic installation vim plug
if empty(glob('~/.vim/autoload/plug.vim'))
  silent !curl -fLo ~/.vim/autoload/plug.vim --create-dirs
    \ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
  autocmd VimEnter * PlugInstall --sync | source $MYVIMRC
endif

call plug#begin('~/.vim/plugged')
" colors
Plug 'ayu-theme/ayu-vim'
Plug 'sickill/vim-monokai'
Plug 'altercation/vim-colors-solarized'
Plug 'vim/colorschemes'

Plug 'vim-airline/vim-airline'
Plug 'vim-airline/vim-airline-themes'


Plug 'scrooloose/nerdtree'
Plug 'girishji/autosuggest.vim'
"Plug 'editorconfig/editorconfig-vim'
"Plug 'spf13/vim-autoclose'

Plug 'kien/ctrlp.vim'
let g:ctrlp_map = '<c-p>'
let g:ctrlp_cmd = 'CtrlP'
let g:ctrlp_custom_ignore = {
  \ 'dir':  '\v[\/](\.(git|hg|svn)|node_modules|dist|build|coverage)$',
  \ 'file': '\v\.(exe|so|dll)$',
  \ 'link': '',
  \ }

Plug 'iamcco/markdown-preview.nvim', { 'do': 'cd app && npx --yes yarn install' }
Plug 'pangloss/vim-javascript'
Plug 'leafgarland/typescript-vim'
Plug 'peitalin/vim-jsx-typescript'
Plug 'styled-components/vim-styled-components', { 'branch': 'main' }
" Plug 'jparise/vim-graphql'

Plug 'ap/vim-css-color'
Plug 'bohaz87/runcode.vim'
" Plug 'bohaz87/vim-session'

Plug 'neoclide/coc.nvim', {'branch': 'release'}

Plug 'easymotion/vim-easymotion'
let g:EasyMotion_do_mapping = 1 " Disable default mappings

" Jump to anywhere you want with minimal keystrokes, with just one key binding.
" `s{char}{label}`
nmap s <Plug>(easymotion-overwin-f)
" Turn on case-insensitive feature
let g:EasyMotion_smartcase = 1
call plug#end()

let g:airline_theme='ayu_dark'

" ============================================
" custom view
" 256 colors: http://guns.github.io/xterm-color-table.vim/images/xterm-color-table-with-visible-rgb.png
" ============================================
let &t_ZH="\e[3m"
let &t_ZR="\e[23m"

" cursor for normal mode and insert mode
let &t_SI = "\e[6 q"
let &t_EI = "\e[2 q"

" my theme
if has('termguicolors')
  set termguicolors
endif
set cursorline

"let ayucolor="light"  " for light version of theme
"let ayucolor="dark"   " for dark version of theme
let ayucolor="mirage" " for mirage version of theme
" colorscheme ayu

" https://www.calmar.ws/vim/256-xterm-24bit-rgb-color-chart.html
hi Normal guibg=NONE ctermbg=NONE
hi CursorLine cterm=underline gui=underdashed guibg=NONE
hi CursorLineNr cterm=bold guibg=NONE 
hi lineNr cterm=italic ctermfg=8 ctermbg=NONE guifg=#808080 gui=italic
hi Comment cterm=italic ctermfg=0 ctermbg=NONE guifg=#808080
"hi Pmenu guifg=black guibg=#f1e5bc
hi SignColumn ctermbg=NONE guibg=NONE
hi Split ctermbg=NONE guibg=red guifg=red
hi VertSplit cterm=NONE ctermbg=NONE ctermfg=NONE guifg=#808080 guibg=NONE
hi Search ctermfg=0 ctermbg=11 guibg=#ffff99 guifg=#000000
" hi JsParen ctermfg=0 ctermbg=11 guibg=NONE guifg=#808080
hi helpExample ctermfg=cyan

" Output the current syntax group
nnoremap <f12> :echo "hi<" . synIDattr(synID(line("."),col("."),1),"name") . '> trans<'
\ . synIDattr(synID(line("."),col("."),0),"name") . "> lo<"
\ . synIDattr(synIDtrans(synID(line("."),col("."),1)),"name") . ">"<cr>

" ============================================
" #keyMapping global key mappings
" ============================================
let mapleader=" "
nnoremap <SPACE> <Nop>
noremap S :w<CR>
noremap Q :q<CR>
noremap <Leader>rc :e $MYVIMRC<CR>
noremap R :RunCode<CR>
map <C-n> :NERDTreeToggle<CR>
map <C-m> :NERDTreeFind<CR>

try
  source ~/.vim/coc-config.vim
catch
  echo "Has err while source coc-config.vim"
endtry

